{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Section","title","children","Form","onSubmit","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","className","s","form","preventDefault","label","input","type","onChange","autoComplete","placeholder","button","Filter","contacts","ContactList","onDeleteContacts","list","map","id","item","contact","btn","onClick","icon","App","filter","setFilter","key","initialValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","length","useLocalStorage","contactsData","setContacts","container","data","some","toLowerCase","find","alert","test","uuidv4","person","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d6d000.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Form_container___cwBN\",\"form\":\"Form_form__2TM1N\",\"label\":\"Form_label__15SAE\",\"input\":\"Form_input__2ESfd\",\"button\":\"Form_button__243jh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"btn\":\"ContactList_btn__1Xk4q\",\"icon\":\"ContactList_icon__33G6D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <>\n      {title && <h1>{title}</h1>}\n      {children}\n    </>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Form.module.css';\n\n\n  export default function Form({onSubmit}) {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({name: name, number: number});\n    reset();\n  };\n\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            autoComplete=\"off\"\n            placeholder=\"Example: XXX-XX-XX\"\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    <p className={s.contacts}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        onChange={onChange}\n        value={value}\n      />\n    </p>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { FaRegTimesCircle } from 'react-icons/fa';\n\nfunction ContactList({ contacts, onDeleteContacts }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts.map(({ id, name, number }) => (\n          <li className={s.item} key={id}>\n            <p className={s.contact}>\n              {name} : {number}\n            </p>\n            <button\n              className={s.btn}\n              type=\"button\"\n              onClick={() => onDeleteContacts(id)}\n            >\n              <FaRegTimesCircle className={s.icon} />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport default ContactList;","import React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Section from './components/Section/Section';\nimport Form from './components/Form/Form';\nimport contactsData from './contactsData/contacts.json';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport s from './components/Form/Form.module.css';\n\nexport default function App() {\n  const [filter, setFilter] = useState('');\n  \n  \n  const useLocalStorage = (key, initialValue) => {\n    const [state, setState] = useState(() => {\n      return JSON.parse(window.localStorage.getItem(key)) || initialValue;\n    });\n  \n    useEffect(() => {\n      window.localStorage.setItem(key, JSON.stringify(state));\n      const localstorageArrayLength =\n        JSON.parse(window.localStorage.getItem(key)).length === 0;\n      if (localstorageArrayLength) {\n        setState(initialValue);\n      }\n    }, [initialValue, key, state]);\n  \n    return [state, setState];\n  };\n  \n  const [contacts, setContacts] = useLocalStorage('contacts', contactsData);\n  \n    const formSubmitHandler = data => {\n      if (\n        contacts.some(\n          ({ name }) => name.toLowerCase() === data.name.toLowerCase(),\n        )\n      ) {\n        alert(`${data.name} is already in your phonebook, bro!`);\n      } else if (contacts.find(({ number }) => number === data.number)) {\n        alert(`${data.name} is already in your phonebook, bro!`);\n      } else if (!/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(data.number)) {\n        alert(`Enter valid number please`);\n      } else {\n        data.id = uuidv4();\n        setContacts(state => [data, ...state]);\n      }\n    };\n  \n    const deleteContacts = id => {\n      setContacts(s => s.filter(contact => contact.id !== id));\n    };\n  \n    const getFilter = e => {\n      setFilter(e.currentTarget.value.toLowerCase())\n    };\n  \n    const getFiltredContacts = () => {\n      return contacts.filter(person =>\n        person.name.toLowerCase().includes(filter),\n      );\n    }\n  \n      return (\n        <div className={s.container}>\n          <Section title=\"Phonebook\">\n            <Form onSubmit={formSubmitHandler} />\n          </Section>\n          <Section title=\"Contacts\">\n            <Filter value={filter} onChange={getFilter} />\n            <ContactList\n              contacts={getFiltredContacts()}\n              onDeleteContacts={deleteContacts}\n            />\n          </Section>\n        </div>\n      );\n    };","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}